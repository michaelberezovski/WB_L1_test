package task2

import (
	"fmt"
	"sync"
)

func main() {

	var a = [5]int{2, 4, 6, 8, 12} //создаём массив
	wg := new(sync.WaitGroup)      //создаем wg для ожидания завершения всех горутин
	mutex := new(sync.Mutex)       //для доступа только одной горутины за раз к критической части кода
	var result [5]int              //массив для записы результатов

	for i, v := range a { //переборо изначального массива циклом с импользованием range
		wg.Add(1) //для каждого элемента добавление в счётчик группы ожидания

		go func(v int) { //запуск новой горутины
			defer wg.Done()   //после исполнения горутины убавить счетчик
			mutex.Lock()      //лочим доступ к result(критической секции) всем кроме одной горутины
			result[i] = v * v //вычисляем
			mutex.Unlock()    //разблокируем
		}(v)
	}

	wg.Wait() //ожидаем завершения всех горутин
	fmt.Println(result)
}
